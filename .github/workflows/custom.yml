name: Custom Tasks

on:
  workflow_dispatch:

permissions: read-all

jobs:
  enable-logs: # This would be 1 enumeration, after CTS has setup the environment with the correct OS type and version.
    name: Enable Logs
    runs-on:
    - self-hosted
    - "x64"
    - "secnetperf"
    - "windows"
    steps:
    - name: Capture Logs
      shell: pwsh
      run: |
        Write-Host 'Connecting to netperf-peer'
        $Session = New-PSSession -ComputerName "netperf-peer" -ConfigurationName PowerShell.7
        Invoke-Command -Session $Session -ScriptBlock {
            REG ADD "HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Control\WinLogon" /v "TracingControlLevel" /t REG_DWORD /d "0" /f
            REG ADD "HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Control\WinInit" /v "TracingControlLevel" /t REG_DWORD /d "0" /f
            REG DELETE "HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Control\WMI\Autologger\profsvc" /f
            C:\_work\quic\scripts\log.ps1 -Start -Profile Full.Verbose
            C:\_work\quic\artifacts\bin\windows\x64_Release_schannel\secnetperf.exe
            C:\_work\quic\scripts\log.ps1 -Stop -OutputPath C:\_work\quic\logs\quic -RawLogOnly
        }
        Write-Host 'Setting up log folder'
        Remove-Item .\artifacts\logs -Force -Recurse -ErrorAction Continue | Out-Null
        mkdir .\artifacts\logs | Out-Null
        Write-Host 'Copying out log files'
        Copy-Item -FromSession $Session C:\_work\quic\logs\ .\artifacts\logs
        Write-Host 'Deleting log files from remote'
        Invoke-Command -Session $Session -ScriptBlock {
            del C:\_work\quic\logs\*
        }
    - name: Upload Logs
      if: ${{ always() }}
      uses: actions/upload-artifact@v4
      with:
        name: logs
        path: artifacts/logs
