name: QUIC

on:
  workflow_dispatch:
    inputs:
      ref:
        required: false
        default: ''
        type: string
  repository_dispatch:
    types: [run-quic]
      # Args: { guid, ref, sha }

concurrency:
  group: quic-${{ github.event.client_payload.sha || github.sha }}
  cancel-in-progress: true

permissions: read-all

jobs:
  # For automated identification of the workflow.
  name:
    name: For ${{ github.event.client_payload.guid }}
    needs: []
    runs-on: ubuntu-20.04
    steps:
    - run: echo "no op"

  build-windows:
    name: Build WinUser
    needs: []
    strategy:
      fail-fast: false
      matrix:
        os: ['windows-2022']
        tls: [schannel] # , openssl, openssl3]
        xdp: [''] # , '-UseXdp']
    uses: microsoft/msquic/.github/workflows/build-reuse-win.yml@main
    with:
      os: ${{ matrix.os }}
      tls: ${{ matrix.tls }}
      xdp: ${{ matrix.xdp }}
      ref: ${{ github.event.client_payload.ref || inputs.ref || 'main' }}

  build-windows-kernel:
    name: Build WinKernel
    needs: []
    strategy:
      fail-fast: false
      matrix:
        os: ['windows-2022']
    uses: microsoft/msquic/.github/workflows/build-reuse-winkernel.yml@main
    with:
      os: ${{ matrix.os }}
      ref: ${{ github.event.client_payload.ref || inputs.ref || 'main' }}

  build-ubuntu:
    name: Build Ubuntu
    needs: []
    strategy:
      fail-fast: false
      matrix:
        os: ['ubuntu-20.04']
        tls: [openssl, openssl3]
    uses: microsoft/msquic/.github/workflows/build-reuse-unix.yml@main
    with:
      os: ${{ matrix.os }}
      tls: ${{ matrix.tls }}
      ref: ${{ github.event.client_payload.ref || inputs.ref || 'main' }}

  test-windows:
    name: Test Windows
    needs: [build-windows]
    strategy:
      fail-fast: false
      matrix:
        vec: [
          { config: "Release", plat: "windows", os: "windows-2022", arch: "x64", tls: "schannel" },
        ]
    runs-on:
    - self-hosted
    - "Windows"
    - "azure"
    - "X64"
    - uses: actions/download-artifact@9bc31d5ccc31df68ecc42ccf4149144866c47d8a
      with:
        name: ${{ matrix.vec.config }}-${{ matrix.vec.plat }}-${{ matrix.vec.os }}-${{ matrix.vec.arch }}-${{ matrix.vec.tls }}${{ matrix.vec.xdp }}
        path: artifacts
    - name: Connect to Peer
      shell: pwsh
      run: |
        $Session = New-PSSession -ComputerName "netperf-peer" -ConfigurationName PowerShell.7
        if ($null -eq $Session) {
            Write-Error "Failed to create remote session"
            exit
        }
        $RemoteAddress = $Session.ComputerName
        Write-Output "Connected to: $RemoteAddress"
        $out = Invoke-Command -Session $Session -ScriptBlock {
          rm -Force -Recurse "C:\_work\quic" -ErrorAction Ignore
          mkdir "C:\_work\quic"
        }
        Write-Output "Copying files to peer"
        Copy-Item -ToSession $Session .\artifacts -Destination C:\_work\quic\artifacts -Recurse
